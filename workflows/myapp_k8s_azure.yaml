parameters:
  db:
    type: String
    lookup: myapp.db
  dbuser:
    type: String
    lookup: myapp.dbuser
  dbpass:
    type: String[10]
    lookup: myapp.dbpass
  appimage:
    type: String
    lookup: myapp.appimage
returns:
  db_address: String
  myapp_service_id: String
steps:
  resource_group:
    returns:
      myappdb_rg_name: name
    AzureRM::Resource_group:
      name: myapp-db-rg
      location: West Europe
  azure_db_instance:
    parameters:
      - myappdb_rg_name
    returns:
      db_address: fqdn
    AzureRM::Mysql_server:
      name: myapp-db
      location: West Europe
      resource_group_name: $myappdb_rg_name
      sku:
        name: B_Gen5_1
        capacity: 1
        tier: Basic
        family: Gen5
      storage_profile:
        storage_mb: 5120
        backup_retention_days: 7
        geo_redundant_backup: Disabled
      administrator_login: $dbuser
      administrator_login_password: $dbpass
      version: '5.7'
      ssl_enforcement: Disabled
  azure_db:
    parameters:
      - db_address
    returns:
      db_id: mysql_database_id
    AzureRM::Mysql_database:
      name: $db
      resource_group_name: $myappdb_rg_name
      server_name: myapp-db
      charset: utf8
      collation: utf8_unicode_ci
  namespace:
    returns:
      myapp_namespace: namespace_id
    Kubernetes::Namespace:
      metadata:
        name: myapp-ns
        labels:
          name: myapp-ns
  myapp_deployment:
    parameters:
      - myapp_namespace
      - db_address
    returns:
      myapp_id: deployment_id
    Kubernetes::Deployment:
      metadata:
        name: myapp
        namespace: $myapp_namespace
        labels:
          app: myapp
      spec:
        replicas: 1
        selector:
          match_labels:
            app: myapp
        template:
          metadata:
            labels:
              app: myapp
          spec:
            init_container:
            - env:
              - name: LYRA_DBNAME
                value: $db
              - name: LYRA_DBUSER
                value: $dbuser
              - name: LYRA_DBPASS
                value: $dbpass
              - name: LYRA_DBHOST
                value: $db_address
              image: puppetseteam/myappdb_sampledata
              name: myapp-init
            container:
            - env:
              - name: MYSQL_DATABASE
                value: $db
              - name: MYSQL_USER
                value: $dbuser
              - name: MYSQL_PASSWORD
                value: $dbpass
              - name: MYSQL_SVC
                value: $db_address
              image: $appimage
              name: myapp
              port:
              - container_port: 80
                host_port: 80
                name: http
                protocol: TCP
  myapp_service:
    parameters:
      - myapp_id
    returns:
      myapp_service_id: service_id
    Kubernetes::Service:
      metadata:
        name: myapp-service
        namespace: $myapp_namespace
      spec:
        selector:
          app: myapp
        port:
          -
            protocol: TCP
            port: 80
            target_port: '80'
        type: LoadBalancer